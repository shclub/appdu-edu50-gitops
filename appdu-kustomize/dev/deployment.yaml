apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-python
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - image: myharbor.apps.okd4.ktdemo.duckdns.org/appdu/edu50/backend-python:${version}
        imagePullPolicy: Always
        name: backend-python
        ports:
        - containerPort: 8080
          name: http
        envFrom:
        - configMapRef:
            name: backend-python-env-configmap
        - secretRef:
            name: backend-python-env-secret
        - secretRef:
            name: backend-python-mariadb
        env:
        - name: NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PROJECT_NAME
          value: backend-python
        resources: 
          requests:
            cpu: 100m
            memory: 384Mi
          limits:
            cpu: 200m
            memory: 512Mi
            
        livenessProbe:
          httpGet:
            path: /health_check/?format=json
            port: http
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5 
        readinessProbe:
          httpGet:
            path: /health_check/?format=json
            port: http
          initialDelaySeconds: 10
          periodSeconds: 15
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
    
        command: ["/bin/sh"]
        args:
        - -c
        - until nc -z backend-python-mariadb 5432 || nc -z backend-python-mariadb 3306; do echo 'Waiting for db connect...' && sleep 1; done 
          && python manage.py migrate 
          && uwsgi -i uwsgi.ini --env DJANGO_DEBUG_MODE=False --processes 2
    
      # 기존의 db 접근 secret 선언부분을 db 연결 부분이 존재 할 경우로 조건 처리 함
        volumeMounts:
    
        - name: backend-python-mariadb
          mountPath: /etc/secret
          readOnly: true
        - name: backend-python-env-configmap
          mountPath: /etc/config/env.properties
          readOnly: true
          subPath: env.properties
    
      # 기존의 db 접근 secret 선언부분을 db 연결 부분이 존재 할 경우로 조건 처리 함
      volumes: 
      - name: backend-python-mariadb
        secret:
          secretName: backend-python-mariadb
      - name: backend-python-env-configmap
        configMap:
          name: backend-python-env-configmap
          items:
            - key: env.properties
              path: env.properties
